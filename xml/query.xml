<querys>
    <group id="user">
        <query id="selectUserList">
        	SELECT 
        		id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, name_commute, join_company, leave_company, privilege, admin
        	FROM members_tbl
        </query>
        <query id="selectIdByUser">
        	SELECT 
        		m.*, d.name AS dept_name 
        	FROM 
        		members_tbl m
        		LEFT JOIN dept_code_tbl d ON d.code = m.dept_code
        	WHERE 
        		m.id=?
        </query>
        <query id="selectManager">select * from members_tbl where privilege &lt;= 2</query>
        <query id="insertUser">insert into members_tbl(id, name, dept_code, name_commute, join_company, privilege, admin) values(?,?,?,?,?, ?,?)</query>
        <query id="initPassword">update members_tbl set password=? where id=?</query>
        <query id="updateUser">
    		UPDATE
        		members_tbl 
        	SET 
        		password=?,
        		name=?,
        		dept_code=?,
        		name_commute=?,
        		join_company=?,
        		leave_company=?,
        		privilege=?,
        		admin=?
        	WHERE id=?
        </query>
        <query id="deleteUser">delete from members_tbl where id=?</query>
    </group>
    
    <group id="dept">
        <query id="selectDeptList">SELECT code, name FROM dept_code_tbl</query>
        <query id="selectDeptList1">SELECT code, name FROM dept_code_tbl</query>
    </group>
    
    <group id="rawData">
        <query id="insertRawData">
        	insert into commute_base_tbl
        		(id, name, department, char_date, year, type)
        	values
        		(?,?,?,?,?,?)
        	ON DUPLICATE KEY UPDATE
        		char_date=?,
        		type=?
        	
        </query>
        <query id="selectRawDataList">
        	select
        		str_to_date(char_date, "%Y-%m-%d %h:%i") date, commute_base_tbl.*
        	from
        		commute_base_tbl
        	where
        		str_to_date(char_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and adddate(str_to_date(?,"%Y-%m-%d"), 1);
        </query>
    </group>
    
    <group id="holiday">
        <query id="selectHolidayList">select * from holiday_tbl where year=?</query>
        <query id="insertHoliday">
        	INSERT INTO holiday_tbl
        		(year, date, memo)
        	VALUES
        		(?, ?, ?)
        	ON DUPLICATE KEY UPDATE
        		memo = CONCAT( memo, ',', ?)
        </query>
        <query id="deleteHoliday">delete from holiday_tbl where date=?</query>
	</group>
	
    <group id="vacation">
        <query id="selectVacationsByYear">
			SELECT 
				m.id, 
			    m.name,
			    (SELECT name FROM dept_code_tbl where code = m.dept_code) dept_name,
			    m.join_company,
				t2.year,
				t2.id,
				t2.total_day,
				t2.used_holiday,
			    (t2.total_day - t2.used_holiday) holiday,
			    IFNULL(t2.memo, '') AS memo
			FROM
				members_tbl m
			    INNER JOIN (
							SELECT
								v.year,
								v.id,
								v.total_day,
								IFNULL(s.used_holiday, 0) used_holiday,
								v.memo
							FROM
								vacation_tbl v
								LEFT JOIN (
											SELECT year, id, sum(day_count)  used_holiday
											FROM out_office_tbl
											GROUP BY year, id
											) s
								ON v.id = s.id and v.year = s.year
							WHERE v.year = ?
			    ) t2
			    ON m.id = t2.id
			ORDER BY m.name
        </query>
        <query id="selectVacatonCount">
			SELECT count(*) count FROM vacation_tbl WHERE year = ?
        </query>
        <query id="selectVacationsById">
			SELECT total_day
			, IFNULL((SELECT sum(day_count) used_holiday FROM out_office_tbl o WHERE year = v.year AND id=v.id), 0) used_holiday
			FROM vacation_tbl v WHERE year = YEAR(NOW()) AND id=?
        </query>
        
        <query id="insertVacation">
			INSERT INTO vacation_tbl(id, year, total_day)
			SELECT ?, ?, ? from dual
			WHERE NOT EXISTS (
					SELECT id
					FROM vacation_tbl
					WHERE 
						id = ?
			        AND 
			        	year = ? 
			)
        </query>

        <query id="updateVacation">
        	UPDATE 
        		vacation_tbl 
        	SET 
        		total_day = ?,
        		memo = ? 
        	WHERE 
        		id = ? AND year = ?
        </query>
    </group>
    
    <group id="approval">
        <query id="selectApprovalList">
        	select 
        		app.doc_num
        		, app.submit_id, (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.submit_id) submit_name 
        		, app.manager_id , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.manager_id) manager_name
        		, submit_date , decide_date , submit_comment , decide_comment , start_date , end_date , office_code
        		, (SELECT office.name FROM office_code_tbl office WHERE office.code = app.office_code) office_code_name
        		, state, start_time, end_time
    		from 
    			approval_tbl app
		</query>
        <query id="selectApprovalListWhere">
        	select 
				app.doc_num, app.submit_id
				, (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.submit_id) submit_name 
				, app.manager_id 
				, (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.manager_id) manager_name
				, submit_date , decide_date , submit_comment , decide_comment , start_date , end_date , office_code
				, (SELECT office.name FROM office_code_tbl office WHERE office.code = app.office_code) office_code_name
				, state, start_time, end_time 
				, IFNULL((SELECT total_day FROM vacation_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0)  total_day
				, IFNULL((SELECT sum(day_count) used_holiday FROM out_office_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0) used_holiday
			from  approval_tbl app 
			where (DATE(start_date) between DATE(?) AND DATE(?)) 
				OR (DATE(end_date)  between DATE(?) AND DATE(?))
    	</query>
    	<query id="insertApproval">
    		insert into approval_tbl
				(doc_num, submit_id, manager_id, submit_date, submit_comment, start_date, end_date, office_code, state, start_time, end_time) 
			values(?, ?, ?, NOW(), ?, ?, ?, ?, '상신', ?, ?)
    	</query>
    	<query id="updateApprovalConfirm">
    		update approval_tbl set 
    			decide_date = NOW()
    			,decide_comment = ?
    			,state = ? 
    			,black_mark = ?
			where doc_num=?
    	</query>
	</group>
	
	<group id="approval_index">
		<query id="selectMaxIndexApproval">
			select MAX(seq) as maxSeq from approval_index_tbl where yearmonth=?
		</query>
		<query id="insertApprovalIndex">
			insert into approval_index_tbl (yearmonth, seq) values (?, 1)
		</query>
		<query id="updateMaxIndex">
			update approval_index_tbl set seq = (seq+1) where yearmonth=?
		</query>
	</group>
	
	<group id="office_code">
		<query id="selectOfficeCodeList">select * from office_code_tbl</query>
        <query id="empty"></query>
	</group>
	
	<group id="dept_code">
		<query id="selectDepartmentCodeList">select * from dept_code_tbl</query>
        <query id="empty"></query>
	</group>
	
    <group id="commute">
        <query id="selectCommute">
            SELECT 
				(@idx:=@idx+1) AS idx,
            t1.*
            from (
					SELECT
							c.year,
							c.date,		
							c.id,
							c.department,
							c.name,
							c.work_type,
							w.name AS work_type_name,
							c.late_time,
							c.over_time,
							IFNULL( date_format(c.in_time, '%Y-%m-%d %T'), NULL) AS in_time,
							c.in_time_type,
							IFNULL( date_format(c.out_time, '%Y-%m-%d %T'), NULL) AS out_time,
							c.out_time_type,
							c.in_time_change,
							c.out_time_change,
							c.comment_count,
							c.overtime_code,
							c.vacation_code,
							c.out_office_code,
							IFNULL( o.name, '') AS overtime_type,
							IFNULL( o.overtime_pay, 0) AS overtime_pay,
							IFNULL( (select name from office_code_tbl where code = c.vacation_code), '') AS vacation_name,
							IFNULL( (select name from office_code_tbl where code = c.out_office_code), '') AS out_office_name                
						FROM 
							commute_result_tbl c
							left join overtime_code_tbl o on c.overtime_code = o.code
							left join work_type_code_tbl w on w.code = c.work_type							
						WHERE
							date BETWEEN ? AND ?
						ORDER BY date
            ) t1,
            (SELECT @idx:= 0) AS idx
        </query>

        <query id="updateCommuteResultInOutTime">
        	UPDATE 
        		commute_result_tbl 
        	SET 
        		in_time = ?,
        		in_time_change = ?,
        		out_time = ?,
        		out_time_change = ?
        	WHERE 
        		id = ? AND date = ?
        </query>
        
        <query id="insertCommuteResult">
        	INSERT INTO commute_result_tbl
        		(date, department, id, in_time, late_time, name, out_office_code,
        		out_time, over_time, overtime_code, vacation_code, standard_in_time,
        		standard_out_time, work_type, year,
        		in_time_type, out_time_type, out_office_start_time, out_office_end_time,
        		in_time_change, out_time_change)
        	VALUES
        		(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
        	ON DUPLICATE KEY UPDATE
				department=?,
				in_time=?,
				late_time=?,
				name=?,
				out_office_code=?,
				out_time=?,
				over_time=?,
				overtime_code=?,
				vacation_code=?,
				standard_in_time=?,
				standard_out_time=?,
				work_type=?,
				in_time_type=?,
				out_time_type=?,
				out_office_start_time=?,
				out_office_end_time=?,
				in_time_change=?,
				out_time_change=?
        </query>
        <query id="selectCommuteDate">
        	SELECT 
        		year,
        		date,
        		id,
        		name,
        		department,
        		date_format(in_time, '%Y-%m-%d %T') AS in_time,
        		date_format(out_time, '%Y-%m-%d %T') AS out_time,
        		date_format(standard_in_time, '%Y-%m-%d %T') AS standard_in_time,
        		date_format(standard_out_time, '%Y-%m-%d %T') AS standard_out_time,
				late_time,
				over_time,
				work_type,
				out_office_code,
				overtime_code,
				vacation_code
				in_time_type,
				out_time_type,
				out_office_end_time,
				out_office_start_time,
				in_time_change,
				out_time_change
        	FROM
        		commute_result_tbl
        	WHERE
        		date = ?
        </query>
		<query id="selectCommuteByID">
        	SELECT 
        		year,
        		date,
        		id,
        		name,
        		department,
        		date_format(in_time, '%Y-%m-%d %T') AS in_time,
        		date_format(out_time, '%Y-%m-%d %T') AS out_time,
        		date_format(standard_in_time, '%Y-%m-%d %T') AS standard_in_time,
        		date_format(standard_out_time, '%Y-%m-%d %T') AS standard_out_time,
				late_time,
				over_time,
				work_type,
				out_office_code,
				overtime_code,
				vacation_code,
				in_time_type,
				out_time_type,
				out_office_end_time,
				out_office_start_time,
				in_time_change,
				out_time_change
        	FROM
        		commute_result_tbl
        	WHERE
        		(date between ? and ?) AND id = ?
        	ORDER BY date
        </query>
        <query id="updateCommuteCommentCount">
        	UPDATE
        		commute_result_tbl
        	SET
        		comment_count = ( SELECT COUNT(*) + 1 FROM comment_tbl WHERE id = ? AND year = ? AND date = ?)
        	WHERE
        		id = ? AND year = ? AND date = ?
        </query>
        <query id="getLastiestDate">
        	select
        		date
        	from
        		commute_result_tbl
        	order by
        		date desc
        	limit 1
        </query>
    </group>
    
    <group id="changeHistory">
    	<query id="selectChangeHistory">
			SELECT
					c.seq,
					c.year,
			        c.id,
			        m.name,
			        c.date,
			        c.change_column,
			        c.change_before,
			        c.change_after,
			        date_format(c.change_date, '%Y-%m-%d %T') AS change_date,
			        c.change_id,
			        (SELECT name FROM members_tbl WHERE id = c.change_id) AS change_name
			FROM
				change_history_tbl c
                inner join members_tbl m 
                on c.id = m.id
			WHERE
				c.id = ?
			    AND c.date = ?
			    AND c.change_column = ?
			ORDER BY c.seq
    	</query>
    	
        <query id="selectInOutChangeCount">
			select (
			            select count(*) 
			            from change_history_tbl
			            where
							year = ?
			                and id = ?
			                and date = ?
			                and change_column = 'in_time'
					) as in_time_change_count,
			        (
			            select count(*) 
			            from change_history_tbl
			            where
							year = ?
			                and id = ?
			                and date = ?
			                and change_column = 'out_time'
					) as out_time_change_count        
			from dual;        
        </query>    	
    	
    	<query id="inserChangeHistory">
			INSERT INTO change_history_tbl
			(
				year, id, date,	change_column, change_before, change_after, change_date, change_id
			)
			values
			(
				?, ?, ?, ?, ?, ?, now(), ?			
			);
    	</query>
    </group>
    
    <group id="comment">
    	<query id="selectComment">
    		SELECT
    			c.year,
    			c.date,
    			c.id,
    			m.name,
    			c.seq,
    			IFNULL( c.comment, '') AS comment,
    			date_format(c.comment_date, '%Y-%m-%d %T') AS comment_date,
    			IFNULL( c.comment_reply, '') AS comment_reply,
    			date_format(c.comment_reply_date, '%Y-%m-%d %T') AS comment_reply_date,
    			c.state,
    			c.writer_id,
    			c.want_in_time,
    			c.want_out_time,
    			IFNULL(  (SELECT name FROM members_tbl WHERE id = c.writer_id) , '') AS writer_name,
    			c.reply_id,
    			IFNULL(  (SELECT name FROM members_tbl WHERE id = c.reply_id), '') AS reply_name    			
    		FROM
    			comment_tbl c
    			LEFT JOIN members_tbl m ON m.id = c.id
    		WHERE
    			date BETWEEN ? AND ?
			ORDER BY date
    	</query>
    	
    	<query id="selectCommentById">
    		SELECT
    			c.year,
    			c.date,
    			c.id,
    			m.name,
    			c.seq,
    			IFNULL( c.comment, '') AS comment,
    			date_format(c.comment_date, '%Y-%m-%d %T') AS comment_date,
    			IFNULL( c.comment_reply, '') AS comment_reply,
    			date_format(c.comment_reply_date, '%Y-%m-%d %T') AS comment_reply_date,
    			c.state,
    			c.writer_id,
    			IFNULL(  (SELECT name FROM members_tbl WHERE id = c.writer_id) , '') AS writer_name,
    			c.reply_id,
    			IFNULL(  (SELECT name FROM members_tbl WHERE id = c.reply_id), '') AS reply_name    			
    		FROM
    			comment_tbl c
    			LEFT JOIN members_tbl m ON m.id = c.id
    		WHERE
    			date BETWEEN ? AND ? and c.id = ?
			ORDER BY date
    	</query>    	
    	
    	<query id="insertComment">
    		INSERT INTO comment_tbl
    		(
    			year, id, date, comment, comment_date, state, writer_id, want_in_time, want_out_time
    		)
    		values
    		(
    			?, ?, ?, ?, now(), ?, ?, ?, ?
    		)
    	</query>
    	
    	<query id="updateCommentReply">
			UPDATE
				comment_tbl
			SET
				comment_reply = ?,
			    comment_reply_date = now(),
			    state = ?,
			    reply_id = ?
			WHERE
				id = ? AND year = ? AND date = ?
    	</query>
    </group>
    
    <group id="outOffice">
    	<query id="selectOutOfficeList">
    		select * from out_office_tbl;
    	</query>
    	<query id="insertOutOffice">
			insert into out_office_tbl(year, date, id, office_code, day_count, memo, doc_num, black_mark, start_time, end_time) 
				values(
					? ,? , ?, ?
					,(select day_count from office_code_tbl where code = ?) 
					,? ,? ,?, ?, ?
				)    		
    	</query>
    </group>
    <group id="inOffice">
    	<query id="selectInOfficeList">
    		select * from in_office_tbl
    	</query>
    	<query id="insertInOffice">
			insert into in_office_tbl(year, date, id, doc_num) values(? ,? , ?, ?)  		
    	</query>
    </group>
    
    <group id="code">
    	<query id="getDepartmentCode">
    		select 
    			*
    		from
    			dept_code_tbl
    	</query>
    	<query id="getOfficeCode">
    		select 
    			*
    		from
    			office_code_tbl
    	</query>
    	<query id="getOvertimeCode">
    		select 
    			*
    		from
    			overtime_code_tbl
    	</query>
    	<query id="getWorktypeCode">
    		select 
    			*
    		from
    			work_type_code_tbl
    	</query>
    </group>
    <group id ="dashboard">
    	<query id="getWorktypeCode">
    		select 
    			*
    		from
    			work_type_code_tbl
    	</query>
    	<query id="selectWorkingSummaryById">
    		SELECT 
				id,
				a.name ,
				COUNT(0) AS 'total_working_day',
				SUM(CASE WHEN (work_type=10 || work_type=11) THEN 1 ELSE 0 END) AS 'perception',
				SUM(CASE WHEN (work_type=01 || work_type=11) THEN 1 ELSE 0 END) AS 'sick_leave',
				SUM(CASE WHEN (work_type=21 || work_type=22) THEN 1 ELSE 0 END) AS 'absenteeism',
				IFNULL(SUM(B.day_count), 0) AS 'vacation',
				SUM(CASE WHEN (overtime_code='2015_AA') THEN 1 ELSE 0 END) AS 'night_working_a',
				SUM(CASE WHEN (overtime_code='2015_AB') THEN 1 ELSE 0 END) AS 'night_working_b',
				SUM(CASE WHEN (overtime_code='2015_AC') THEN 1 ELSE 0 END) AS 'night_working_c',
				SUM(CASE WHEN (overtime_code='2015_BA') THEN 1 ELSE 0 END) AS 'holiday_working_a',
				SUM(CASE WHEN (overtime_code='2015_BB') THEN 1 ELSE 0 END) AS 'holiday_working_b',
				SUM(CASE WHEN (overtime_code='2015_BC') THEN 1 ELSE 0 END) AS 'holiday_working_c'
			FROM yescnc_db.commute_result_tbl A 
			LEFT OUTER JOIN office_code_tbl B ON A.vacation_code = B.code
			LEFT OUTER JOIN overtime_code_tbl C ON A.overtime_code=C.code 
			INNER JOIN (
				SELECT 
					STR_TO_DATE(?, '%Y-%m-%d') AS START_DATE,
					STR_TO_DATE(?, '%Y-%m-%d') AS END_DATE
				FROM DUAL
			) D ON A.date &gt;= D.START_DATE AND A.date &lt;= D.END_DATE
			WHERE A.id = ?
			GROUP BY ID
    	</query>
    </group>
</querys>