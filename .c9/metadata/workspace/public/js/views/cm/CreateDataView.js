{"changed":true,"filter":false,"title":"CreateDataView.js","tooltip":"/public/js/views/cm/CreateDataView.js","value":"define([\n  'jquery',\n  'underscore',\n  'backbone',\n  'core/BaseView',\n  'grid',\n  'schemas',\n  'dialog',\n  'cmoment',\n  'resulttimefactory',\n  'code',\n  'i18n!nls/common',\n  'text!templates/default/head.html',\n  'text!templates/default/content.html',\n  'text!templates/layout/default.html',\n  'text!templates/default/row.html',\n  \n  'models/cm/CommuteModel',\n  'collection/common/HolidayCollection',\n  'collection/common/RawDataCollection',\n  'collection/sm/UserCollection',\n  'collection/cm/CommuteCollection',\n  'collection/vacation/OutOfficeCollection',\n  'collection/vacation/InOfficeCollection',\n  \n  'views/cm/popup/CreateDataPopupView',\n  'views/cm/popup/CreateDataRemovePopupView',\n  'views/component/ProgressbarView'\n], function($, _, Backbone, BaseView, Grid, Schemas, Dialog, Moment, ResultTimeFactory, Code, i18nCommon,\n    HeadHTML, ContentHTML, LayoutHTML,RowHTML,\n    CommuteModel, HolidayCollection, RawDataCollection, UserCollection, CommuteCollection, OutOfficeCollection, InOfficeCollection,\n    CreateDataPopupView, CreateDataRemovePopupView, ProgressbarView\n){\n    function dateToText(data){\n        return _.isNull(data) ? null : Moment(data).format(\"MM-DD<br>HH:mm:ss\");\n    }\n    \n    var CreateDataView = BaseView.extend({\n        \n        el:$(\".main-container\"),\n       \n    \tinitialize:function(){\n    \t\t$(this.el).html('');\n    \t    $(this.el).empty();\n    \t    this.commuteCollection = new CommuteCollection();\n    \t    \n    \t\tthis.gridOption = {\n    \t\t    el:\"createCommuteListContent\",\n    \t\t    id:\"createCommuteListTable\",\n    \t\t    column:[\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.DATE,       \"data\": \"date\"},\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.DEPARTMENT, \"data\": \"department\"},\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.NAME,       \"data\": \"name\"},\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.WORK_TYPE,  \"data\": \"work_type\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return Code.getCodeName(Code.WORKTYPE, data);\n                       }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.STDIN_TIME, \"data\": \"standard_in_time\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return dateToText(data);\n                       }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.IN_TIME,    \"data\": \"in_time\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return dateToText(data);\n                       }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.LATE_TIME,  \"data\": \"late_time\"},\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.STDOUT_TIME, \"data\": \"standard_out_time\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return dateToText(data);\n                       }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.OUT_TIME,   \"data\": \"out_time\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return dateToText(data);\n                            \n                       }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.OVER_TIME,  \"data\": \"over_time\"},\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.OVERTIME_CODE, \"data\": \"overtime_code\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return Code.getCodeName(Code.OVERTIME, data);\n                        }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.VACATION_CODE, \"data\": \"vacation_code\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return Code.getCodeName(Code.OFFICE, data);\n                        }\n                    },\n                    {\"title\": i18nCommon.CREATE_COMMUTE_RESULT.GRID_COL_NAME.OUT_OFFICE_CODE, \"data\": \"out_office_code\",\n                        \"render\": function (data, type, rowData, meta) {\n                            return Code.getCodeName(Code.OFFICE, data);\n                        }\n                    },\n    \t\t    ],\n    \t\t    dataschema:[\n    \t\t        \"date\", \"name\", \"in_time\", \"out_time\", \"work_type\", \"standard_in_time\" ,\"standard_out_time\",\n    \t\t        \"late_time\", \"over_time\", \"overtime_code\", \"vacation_code\", \"out_office_code\"\n    \t\t    ],\n    \t\t    collection:this.commuteCollection,\n    \t\t    detail: true,\n    \t\t    fetch: false,\n    \t\t    buttons:[\"search\"],\n    \t\t    order:[[1,\"asc\"]]\n    \t\t};\n    \t\t\n    \t\tthis._dialogInit();\n    \t\t\n    \t},\n    \t\n    \t_dialogInit: function(){\n    \t    this._addAddBtn();\n    \t    this._addCommitBtn();\n        },\n    \t_addAddBtn : function(){\n    \t    var that = this;\n    \t    this.gridOption.buttons.push({\n    \t        type:\"custom\",\n    \t        name:\"add\",\n    \t        tooltip:i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.TOOLTIP,\n    \t        click:function(){\n                    var createDataPopupView= new CreateDataPopupView({date : that.lastestDate});\n                    \n                    Dialog.show({\n                        title:i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.TITLE, \n                        content:createDataPopupView, \n                        buttons: [{\n                            id: 'createDataCreateBtn',\n                            cssClass: Dialog.CssClass.SUCCESS,\n                            label: i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.BUTTON.CREATE,\n                            action: function(dialog) {\n                                Dialog.confirm({\n                        \t\t\tmsg : i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.ASK,\n                        \t\t\taction:function(){\n                        \t            return createDataPopupView.createData();\n                                    },\n                                    actionCallBack:function(result){\n                                        that.commuteCollection.reset();\n                                        that.commuteCollection.add(result);\n                                        that.grid.render();\n                                        dialog.close();\n                                        Dialog.show(i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.MSG.CREATE_DATA_COMPLETE);    \n                                    },\n                                    errorCallBack:function(response){\n                                        Dialog.error(i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.MSG.CREATE_DATA_CANCEL);\n                                    },\n                                });  \n                            }\n                        }, {\n                            label : i18nCommon.CREATE_COMMUTE_RESULT.CREATE_DIALOG.BUTTON.CANCEL,\n                            action: function(dialog){\n                                dialog.close();\n                            }\n                        }],\n                    });\n                }\n    \t    });\n    \t},\n    \t_addCommitBtn : function(){\n    \t    var that = this;\n    \t    this.gridOption.buttons.push({\n    \t        type:\"custom\",\n    \t        name:\"ok\",\n    \t        tooltip:i18nCommon.CREATE_COMMUTE_RESULT.COMMIT_DIALOG.TOOLTIP,\n    \t        click:function(){\n    \t            Dialog.confirm({\n    \t\t\t\t\tmsg : i18nCommon.CREATE_COMMUTE_RESULT.COMMIT_DIALOG.MESSAGE,\n    \t\t\t\t\taction:function(){\n                            var dfd = new $.Deferred();\n                            that.commuteCollection.save({\n            \t                success:function(){\n            \t                    dfd.resolve();\n            \t                },\n            \t                error: function(model, response){\n            \t                    dfd.reject();\n            \t                }\n            \t            });\n            \t            return dfd;\n                        },\n                        actionCallBack:function(res){//response schema\n    \t                    that._setLabel();\n    \t                    Dialog.info(i18nCommon.CREATE_COMMUTE_RESULT.COMMIT_DIALOG.MSG.COMMIT_DATA_COMPLETE);\n                        },\n                        errorCallBack:function(response){\n    \t                    Dialog.error(i18nCommon.CREATE_COMMUTE_RESULT.COMMIT_DIALOG.MSG.COMMIT_DATA_FAIL);\n                        },\n    \t            });\n    \t        }\n    \t    });  \n    \t},\n    \t\n    \trender:function(){\n            var _headSchema=Schemas.getSchema('headTemp');\n    \t    var _headTemp=_.template(HeadHTML);\n    \t    var _layout=$(LayoutHTML);\n    \t    var _head=$(_headTemp(_headSchema.getDefault(\n    \t        {\n    \t            title:i18nCommon.CREATE_COMMUTE_RESULT.TITLE,\n    \t            subTitle:i18nCommon.CREATE_COMMUTE_RESULT.SUB_TITLE\n    \t        })\n    \t    ));\n    \t    \n    \t    _head.addClass(\"no-margin\");\n    \t    _head.addClass(\"relative-layout\");\n    \t    \n    \t    var _content=$(ContentHTML).attr(\"id\", this.gridOption.el);\n    \t    \n    \t    var _row=$(RowHTML);\n    \t    var _labelContainer = $(\"<div class='col-sm-3'></div>\");\n    \t    var _label = $(\"<label class='control-label'></label>\");\n    \t    \n    \t    this.label = _label;\n    \t    \n    \t    _labelContainer.append(_label);\n    \t    _row.append(_labelContainer);\n    \t    \n    \t    _layout.append(_head);\n    \t    _layout.append(_row);\n            _layout.append(_content);\n            \n    \t    $(this.el).append(_layout);\n    \t    this.lastestDate = null;\n            this._setLabel();\n            \n    \t    var _gridSchema=Schemas.getSchema('grid');\n    \t    this.grid= new Grid(_gridSchema.getDefault(this.gridOption));\n    \t    \n            return this;\n     \t},\n     \t_setLabel : function(){\n     \t    var that = this;\n     \t    $.get(\n    \t        \"/commute/lastiestdate\",\n    \t        function(data){\n    \t            if(data.length === 0){\n    \t                that.label.parent().css(\"display\",\"none\");\n    \t            }else{\n    \t                that.label.parent().css(\"display\",\"block\");\n    \t                that.label.text(\"Lastest data : \" + data[\"0\"].date);\n    \t                that.lastestDate = data[\"0\"].date;\n    \t            }\n    \t        }\n    \t    );\n     \t},\n    });\n    \n    return CreateDataView;\n});","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":496.5,"scrollleft":0,"selection":{"start":{"row":159,"column":7},"end":{"row":159,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":400,"mode":"ace/mode/javascript"}},"timestamp":1429591289000}