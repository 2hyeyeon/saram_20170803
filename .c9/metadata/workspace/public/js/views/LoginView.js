{"changed":true,"filter":false,"title":"LoginView.js","tooltip":"/public/js/views/LoginView.js","value":"define([\n'jquery',\n'underscore',\n'backbone',\n'log',\n'dialog',\n'spin',\n'validator',\n'cryptojs.sha256',\n'models/sm/UserModel',\n'models/sm/SessionModel',\n'models/MessageModel',\n'text!templates/login/loginTemplate.html',\n'text!templates/login/loginPasswordSectionTemplate.html',\n'text!templates/login/initPasswordTemplate.html',\n'text!templates/login/findPasswordSectionTemplate.html',\n'i18n!nls/common',\n'css!cs/login.css',\n], function($, _,Backbone, log, Dialog, Spin, _V, CryptoJS, UserModel, SessionModel, MessageModel, LoginHTML, LoginPasswordSectionHTML \n, InitPasswordHTML, FindPasswordSectionHTML\n, i18nCommon){\n    var opts = {\n        lines: 7, // The number of lines to draw\n        length: 1, // The length of each line\n        width: 4, // The line thickness\n        radius: 4, // The radius of the inner circle\n        corners: 1, // Corner roundness (0..1)\n        rotate: 0, // The rotation offset\n        direction: 1, // 1: clockwise, -1: counterclockwise\n        color: '#fff', // #rgb or #rrggbb or array of colors\n        speed: 1, // Rounds per second\n        trail: 60, // Afterglow percentage\n        shadow: false, // Whether to render a shadow\n        hwaccel: false, // Whether to use hardware acceleration\n        className: 'spinner', // The CSS class to assign to the spinner\n        zIndex: 2e9, // The z-index (defaults to 2000000000)\n        top: '10px', // Top position relative to parent\n        left: '5px' // Left position relative to parent\n    }; \n    \n    var transitionEnd = 'transitionend webkitTransitionEnd oTransitionEnd otransitionend';\n    var LOG=log.getLogger('LoginView');\n    var LoginView = Backbone.View.extend({\n    \tinitialize:function(){\n            this.el=$(\".main-container\");\n            $(\"body\").addClass(\"login-body\");\n            \n            _.bindAll(this, 'render');\n            _.bindAll(this, 'close');\n    \t},\n    \taddClickEvent:function(){\n    \t    var _view=this;\n    \t    this.formSection.find(\"#loginbtn\").click(function(){\n                _view.login();\n                return false;\n            });\n            this.passwordSection.find(\"#initPaswordBtn\").click(function(){\n               _view.commitPassword();\n            });\n            this.passwordSection.find(\"#initCanceleBtn\").click(function(){\n                _view.render(_view.app);\n            });\n            this.passwordSection.find(\"#initRePasswordInput\").bind('keydown', function(e){\n               if(e.keyCode == 13) {\n                   e.preventDefault();\n                   _view.commitPassword();\n               }\n            });\n            this.passwordSection.find(\"#initPasswordInput\").bind('keydown', function(e){\n               if(e.keyCode == 13) {\n                   e.preventDefault();\n                   _view.commitPassword();\n               }\n            });\n            \n            this.loginPasswordSection.find(\"#findPasswordBtn\").click(function(e){\n                 e.preventDefault();\n                _view.formSection.addClass(\"bounceOut\");\n                _view.passwordSection.addClass(\"fadeOutLeftBig\");\n                _view.loginPasswordSection.addClass(\"fadeOutRightBig\");\n                \n                setTimeout(function timeoutTimeout() {\n                    _view.formSection.css(\"display\", \"none\");\n                    _view.passwordSection.css(\"display\", \"none\");\n                    _view.loginPasswordSection.css(\"display\", \"none\");\n                    \n                    _view.findPasswordSection.css(\"display\", \"block\");\n                    _view.findPasswordSection.addClass(\"fadeInLeftBig\");\n                }, 300);\n                \n    \t        return false;\n    \t    });\n    \t    \n    \t    this.findPasswordSection.find(\"#findCloseBtn\").click(function(){\n                _view.render(_view.app);\n            });\n            \n            this.findPasswordSection.find(\"#findPasswordBtn\").click(function(){\n                _view.findPassword();\n            });\n            this.findPasswordSection.find(\"#findIdInput\").bind('keydown', function(e){\n               if(e.keyCode == 13) {\n                   e.preventDefault();\n                   _view.findPassword();\n               }\n            });\n            this.findPasswordSection.find(\"#findEmailInput\").bind('keydown', function(e){\n               if(e.keyCode == 13) {\n                   e.preventDefault();\n                   _view.findPassword();\n               }\n            });\n            \n            this.findPasswordSection.find('form').submit(false);\n            this.passwordSection.find('form').submit(false);\n    \t},\n    \trender:function(app, data){\n            this.formSection=$(_.template(LoginHTML)({//로그인 창\n                title:i18nCommon.LOGIN_VIEW.TITLE,\n                idPlaceholder:i18nCommon.LOGIN_VIEW.ID_PLACEHOLDER,\n                passwordPlaceholder:i18nCommon.LOGIN_VIEW.PASSWORD_PLACEHOLDER,\n                loginSatusBtn:i18nCommon.LOGIN_VIEW.LOGIN_SATUS_BTN,\n                loginBtn:i18nCommon.LOGIN_VIEW.LOGIN_BTN\n            }));\n            \n            this.passwordSection=$(_.template(InitPasswordHTML)({//비밀번호 설정창\n                title:i18nCommon.LOGIN_VIEW.TITLE,\n                newPasswordPlaceholder:i18nCommon.INIT_PASSWORD_VIEW.NEW_PASSWORD_PLACEHOLDER,\n                rePasswordPlaceholder:i18nCommon.INIT_PASSWORD_VIEW.RE_PASSWORD_PLACEHOLDER,\n                initPasswordStatusBtn:i18nCommon.INIT_PASSWORD_VIEW.INIT_PASSWORD_STATUS_BTN,\n                initPasswordBtn:i18nCommon.INIT_PASSWORD_VIEW.INIT_PASSWORD_BTN,\n                closeBtn:i18nCommon.DIALOG.BUTTON.CLOSE\n            }));\n            \n            \n            this.loginPasswordSection=$(_.template(LoginPasswordSectionHTML)({//비밀번호 찾기 텍스트 창\n                text:i18nCommon.LOGIN_VIEW.FIND_PASSWORD_TEXT\n            }));\n            \n            this.findPasswordSection=$(_.template(FindPasswordSectionHTML)({//비밀번호 찾기 창\n                title:i18nCommon.FIND_PASSWORD_VIEW.TITLE,\n                idPlaceholder:i18nCommon.LOGIN_VIEW.ID_PLACEHOLDER,\n                emailPlaceholder:i18nCommon.FIND_PASSWORD_VIEW.EMAIL_PLACEHOLDER,\n                findPasswordStatusBtn:i18nCommon.FIND_PASSWORD_VIEW.FIND_PASSWORD_STATUS_BTN,\n                findPasswordBtn:i18nCommon.FIND_PASSWORD_VIEW.FIND_PASSWORD_BTN,\n                closeBtn:i18nCommon.DIALOG.BUTTON.CLOSE,\n                findTextInfo:i18nCommon.FIND_PASSWORD_VIEW.FIND_TEXT_INFO\n            }));\n            \n            this.passwordSection.css(\"display\", \"none\");\n            this.findPasswordSection.css(\"display\", \"none\");\n            \n    \t    this.el.html(this.formSection);\n    \t    this.el.append(this.loginPasswordSection);\n    \t    this.el.append(this.passwordSection);\n    \t    this.el.append(this.findPasswordSection);\n    \t    \n    \t    this.addClickEvent();\n    \t    \n    \t    this.app=app;\n    \t    this.el.find(\".form-control\").on(\"focus\",function(){\n    \t        $(\".login-input\").removeClass(\"login-input-focus\");\n    \t        $(this).parent().addClass(\"login-input-focus\");\n    \t    });\n    \t    \n    \t    if (!_.isUndefined(data)){//data 가 잇을 경우에는 셋팅하고 자동 로그인 \n    \t       this.formSection.find(\"#loginIdTextbox\").val(data.id);\n    \t       this.formSection.find(\"#loginPasswordTextbox\").val(data.password);\n    \t       this.login();\n    \t    }\n    \t    \n    \t    this.formSection.find(\"#loginIdTextbox\").focus();\n    \t    \n    \t    var messageModel = new MessageModel();\n    \t    messageModel.fetch({\n    \t        success : function(result){\n    \t            if(result.get(\"visible\") == 1){\n    \t                Dialog.info( result.get(\"text\") );      \n                \t       \n    \t            }\n    \t            \n    \t        }\n    \t    })\n     \t},\n    \t\n    \tlogin : function(){\n    \t    var _view=this;  \n       // btn.button('loading')\n    \t    var data = this.getFormData( _view.formSection.find('form'));\n    \t    if ((_.isUndefined(data.id)||_.isEmpty(data.id)) || (_.isUndefined(data.password)||_.isEmpty(data.password))){\n    \t        Dialog.warning(i18nCommon.WARNING.LOGIN.NOT_VALID_LOGIN_INFO);         \n    \t    } else {\n    \t       var hash=CryptoJS.SHA256(data.password);\n    \t       var _hashPassword=hash.toString();\n    \t        \n    \t        data.password =_hashPassword;\n    \t        $(\"#loginbtn\").button(\"loading\");\n    \t        \n    \t        var _spin=new Spin(opts).spin($(\"#loginbtn\").find(\".spinIcon\")[0]);\n                SessionModel.login(data).then(function(){\n                    _view.app.draw();    \n                }).fail(function(e){\n                    if (!_.isUndefined(e.user)){\n                        \n                        _view.loginPasswordSection.addClass(\"fadeOutRightBig\");\n                        _view.formSection.addClass(\"bounceOut\").one(transitionEnd, function(){\n                            $(\"#loginbtn\").button('reset');\n                            _view.passwordSection.find(\"#initIdInput\").val(data.id);\n                            _view.formSection.css(\"display\", \"none\");\n                            _view.passwordSection.addClass(\"fadeInLeftBig\");\n                            _view.passwordSection.css(\"display\", \"block\");\n                        });;\n                    } else {\n                        $(\"#loginbtn\").button('reset');\n                        Dialog.warning(i18nCommon.WARNING.LOGIN[e.msg]);\n                    }\n                });\n            }\n    \t    return false;\n    \t},\n    \tcommitPassword : function(){\n    \t    var _view=this;\n            var data = this.getFormData(this.passwordSection.find('form'));\n            if ((_.isUndefined(data.repassword)||_.isEmpty(data.repassword)) || (_.isUndefined(data.password)||_.isEmpty(data.password)) || (data.repassword!=data.password)){//validation\n                if ((data.repassword!=data.password)){//초기화 암호 입력된 값이 맞지 않을 때\n                    Dialog.warning(\"입력하신 비밀번호를 확인해주세요.\");   \n                } else {//초기화 암호 입력 안한경우\n                    Dialog.warning(i18nCommon.WARNING.LOGIN.INIT_PASSWORD_PUT);   \n                }      \n            } else {\n                //암호화\n                var _inputPasswordValue=data.password;\n                var hash=CryptoJS.SHA256(data.password);\n        \t    var _hashPassword=hash.toString();\n        \t    data.password =_hashPassword;\n        \t    \n                $(\"#initPaswordBtn\").button(\"loading\");\n    \t        var _spin=new Spin(opts).spin($(\"#initPaswordBtn\").find(\".spinIcon\")[0]);\n    \t        $(\"#initCanceleBtn\").button(\"loading\");\n    \t        \n                SessionModel.initPassword({id: data.id, password:data.password}).done(function(result){\n                    _view.passwordSection.addClass(\"fadeOutLeftBig\").one(transitionEnd, function(){\n                        data.password=_inputPasswordValue;//암호화 안된 값 로그인 정보 세팅.\n                        _view.render(_view.app, data);\n                    });\n                }).fail(function(e){\n                    Dialog.error(\"Init Password fail.\");\n                });\n            }\n            return false;\n    \t},\n    \tfindPassword:function(){//비밀번호 찾기\n    \t    var _view=this;\n            var data = this.getFormData(this.findPasswordSection.find('form'));\n            if ((_.isUndefined(data.id)||_.isEmpty(data.id)) || (_.isUndefined(data.email)||_.isEmpty(data.email))){//validation\n                Dialog.warning(i18nCommon.WARNING.LOGIN.FIND_PASSWORD_PUT);   \n            } else {\n                \n                var validateObject=_V.validate([\n                    {\n                        validator:_V.number,\n                        value:data.id,\n                        message:\"아이디가 올바르지 않습니다.\"\n                    },\n                    {\n                        validator:_V.email,\n                        value:data.email,\n                        message:\"이메일이 올바르지 않습니다.\" \n                    }\n                ]);\n                \n                if (validateObject.isValid){//Email 유효성 검사\n                    _view.findPasswordSection.find(\"#findPasswordBtn\").button(\"loading\");\n        \t        var _spin=new Spin(opts).spin(_view.findPasswordSection.find(\"#findPasswordBtn\").find(\".spinIcon\")[0]);\n        \t        _view.findPasswordSection.find(\"#findCloseBtn\").button(\"loading\");\n        \t        \n                    SessionModel.findPassword({id: data.id, email:data.email}).done(function(result){\n                        \n    \t\t\t\t\tDialog.show(i18nCommon.SUCCESS.LOGIN[result.message],function(){\n    \t\t\t\t\t    \n                            // _view.findPasswordSection.find(\"#findPasswordBtn\").button(\"reset\");\n                            // _view.findPasswordSection.find(\"#findCloseBtn\").button(\"reset\");\n                            window.location=\"http://webmail.yescnc.co.kr\";\n                            //_view.findPasswordSection.find(\"#findCloseBtn\").trigger(\"click\");\n    \t\t\t\t\t});\n                    }).fail(function(e){\n                        Dialog.warning(i18nCommon.WARNING.LOGIN[e.message]);\n                        _view.findPasswordSection.find(\"#findPasswordBtn\").button(\"reset\");\n                        _view.findPasswordSection.find(\"#findCloseBtn\").button(\"reset\");\n                    });\n                } else {\n                    Dialog.warning(validateObject.message);   \n                }\n            }\n            return false;\n    \t},\n    \tclose:function(){// 창 다 닫기\n           // this.formSection.removeClass(\"bounceIn\");\n           // this.passwordSection.removeClass(\"fadeInRightBig\");\n            //this.loginPasswordSection.removeClass(\"fadeInRightBig\");\n           // this.findPasswordSection.removeClass(\"fadeUpRightBig\");\n            \n            this.formSection.addClass(\"bounceOut\");\n            this.passwordSection.addClass(\"fadeOutRightBig\");\n            //his.loginPasswordSection.addClass(\"fadeOutRightBig\");\n           // this.findPasswordSection.removeClass(\"fadeDownRightBig\");\n    \t},\n    \tgetFormData: function(form) {\n           // form.find(':input:disabled').removeAttr('disabled');\n            var unindexed_array = form.serializeArray();\n            var indexed_array= {};\n            \n            $.map(unindexed_array, function(n, i){\n                  indexed_array[n['name']] = n['value'];\n            });\n              \n            return indexed_array;\n    \t}\n    });\n    return LoginView;\n});","undoManager":{"mark":0,"position":-1,"stack":[[{"start":{"row":117,"column":42},"end":{"row":117,"column":51},"action":"remove","lines":["LoginHTML"],"id":1},{"start":{"row":117,"column":42},"end":{"row":117,"column":43},"action":"insert","lines":[";"]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":42,"column":42},"end":{"row":42,"column":42},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1423785540000}